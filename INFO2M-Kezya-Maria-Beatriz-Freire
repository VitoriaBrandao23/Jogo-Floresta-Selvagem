from time import sleep

class Animal:
    def __init__(self, nome, cor, sexo, idade, raca, posicao_X, posicao_Y):
        self.nome = nome
        self.cor = cor
        self.sexo = sexo
        self.idade = idade
        self.raca = raca
        self.posicao_X = posicao_X
        self.posicao_Y = posicao_Y
    
    #Método Get
  
    def getNome(self):
        return self.nome

    def getCor(self):
        return self.cor

    def getSexo(self):
        return self.sexo

    def getIdade(self):
        return self.idade

    def getRaca(self):
        return self.raca

    def getPosicao_X(self):
        return self.posicao_X

    def getPosicao_Y(self):
        return self.posicao_Y

    #Método Set
    def setNome(self, nome):
        self.nome = nome

    def setCor(self, cor):
        self.cor = cor

    def setSexo(self, sexo):
        self.sexo = sexo

    def setIdade(self, idade):
        self.idade = idade

    def setRaca(self, raca):
        self.raca = raca

    def setPosicao_X(self, posicao_X):
        self.posicao_X = posicao_X

    def setPosicao_Y(self, posicao_Y):
        self.posicao_Y = posicao_Y
      
    def caracteristicas(self):
        print(f"Nome: {self.nome}\nCor: {self.cor}\nSexo: {self.sexo}")
        print(f"Idade:{self.idade}\nRaça: {self.raca}")
        print(f"Posicão eixo X:{self.posicao_X}\nPosição eixo Y: {self.posicao_Y}")

    def colisao(self):
      print("Animais colidindo!")
    
class Leao(Animal):
    def __init__(self, nome, cor, sexo, idade, raca, posicao_X, posicao_Y):
        super().__init__(nome, cor, sexo, idade, raca, posicao_X, posicao_Y)
    
    def rugir(self):
        print("ROAR ROAR ROAR")

    def mover_para_cima(self):
        self.posicao_Y -= 1

    def mover_para_baixo(self):
        self.posicao_Y += 1

    def mover_para_esquerda(self):
        self.posicao_X -= 1

    def mover_para_direita(self):
        self.posicao_X += 1
    
class Cachorro(Animal):
    def __init__(self, nome, cor, sexo, idade, raca,  posicao_X, posicao_Y):
        super().__init__(nome, cor, sexo, idade, raca, posicao_X, posicao_Y)
    
    def latir(self):
        print("AU AU AU")

class Gato(Animal):
    def __init__(self, nome,cor, sexo, idade, raca, posicao_X, posicao_Y):
        super().__init__(nome, cor, sexo, idade, raca, posicao_X, posicao_Y)
    
    def miar(self):
        print("MIAU MIAU MIAU")
    
class Vaca(Animal):
    def __init__(self, nome, cor, sexo, idade, raca, posicao_X, posicao_Y):
        super().__init__(nome, cor, sexo, idade, raca, posicao_X, posicao_Y)
    
    def mugir(self):
        print("MUU MUU MUU")

class Jacare(Animal):
    def __init__(self, nome, cor, sexo, idade, raca, posicao_X, posicao_Y):
        super().__init__(nome, cor, sexo, idade, raca, posicao_X, posicao_Y)
    
    def bramir(self):
        print("ROOR ROOR ROOR")

class Capivara(Animal):
    def __init__(self, nome, idade, cor, sexo, raca, posicao_X, posicao_Y):
        super().__init__(nome, idade, cor, sexo, raca, posicao_X, posicao_Y)
    
    def assobiar(self):
        print("AHN AHN AHN")

#Objetos
leao = Leao("Mufasa", "Marrom", "Macho", 10, "Leão-Africano", "-", "-")
dog = Cachorro("Elvis", "Branco", "Macho", 8, "Vira-Lata", "-", "-")
cat = Gato("Lady", "Cinza", "Fêmea", 12, "Gato Persa", "-", "-")
vaca = Vaca("Mimosa", "Branca com manchas pretas", "Fêmea", 10, "Holstein-Frísia", "-", "-")
jacare = Jacare("Tic Tac", "Verde", "Macho", 8, "Jacaré-do-papo-amarelo", "-", "-")
capivara = Capivara("Filó", "Marrom", "Fêmea", 12, "não especificado", "-", "-")
leao2 = Leao("Simba", "Amarelo", "Macho", 9, "Leão-Africano", "-", "-")

#INICIO
print(""*15,"JOGO FLORESTA SELVAGEM\n")
print(""*15, "REGRAS DO JOGO")
print("\nNo jogo existem 7 animais, e você jogará com o Leão1, tendo como missão eliminar todos os animais menos o Leão2.\nCaso você colida com o Leão2, você perderá o jogo!\nE atenção na sua energia! Se ela acabar, você morrerá na floresta!\n\nBoa sorte!")
print("\nPara começar a batalha animal, por favor, preencha as informações a seguir:")

#Instruções
sleep(1)
print("\nDIGITE A ENERGIA DE CADA ANIMAL\n\nObs: Você não saberá para qual animal está dando a energia escolhida\n")
leao_est = int(input("Estamina: "))
dog_est = int(input("Estamina: "))
cat_est = int(input("Estamina: "))
vaca_est = int(input("Estamina: "))
jacare_est = int(input("Estamina: "))
cap_est = int(input("Estamina: "))
leao2_est = int(input("Estamina: "))

#Imprimindo as características
print("\nLeão 1 (1):\n")
leao.caracteristicas()
print("Estamina:",leao_est)
print("\nCachorro (D):\n")
dog.caracteristicas()
print("Estamina:",dog_est)
print("\nGato (G):\n")
cat.caracteristicas()
print("Estamina:",cat_est)
print("\nVaca (V):\n")
vaca.caracteristicas()
print("Estamina:",vaca_est)
print("\nJacaré (J):\n")
jacare.caracteristicas()
print("Estamina:",jacare_est)
print("\nCapivara (C):\n")
capivara.caracteristicas()
print("Estamina:",cap_est)
print("\nLeão 2 (2):\n")
leao2.caracteristicas()
print("Estamina:",leao2_est)

#Implementando rodadas:
import random

tamanho_matriz = 10

Ob1= "1"
Ob2= "2"
Ob3= "C"
Ob4= "J"
Ob5= "G"
Ob6= "D"
Ob7= "V"

#Imprimir a matriz
def print_matriz(matriz):
    for linha in matriz:
        print(" ".join(str(celula) for celula in linha))

#Posição aleatória dentro da matriz
def criar_objeto(matriz):
    x = random.randint(0, tamanho_matriz - 1)
    y = random.randint(0, tamanho_matriz - 1)
    matriz[y][x] = Ob1
    return x, y

colisao = 0
CO = False
ganhou = False
def mover_objeto(matriz, x, y, direcao_x, direcao_y):
    global colisao, CO, ganhou
    matriz[y][x] = '_'
    novo_x = max(0, min(x + direcao_x, tamanho_matriz - 1))
    novo_y = max(0, min(y + direcao_y, tamanho_matriz - 1))
    
    if matriz[novo_y][novo_x] == Ob2:
      print("")
      leao.colisao()
      print("")
      leao.rugir()
      leao2.rugir()
      CO = True
      print("\n\033[31mGAME OVER\033[m")
      matriz[novo_y][novo_x] = Ob1
      return novo_x, novo_y
      
    if matriz[novo_y][novo_x] == Ob3:
       print("")
       leao.colisao()
       print("")
       leao.rugir()
       capivara.assobiar()
       colisao += 1
    elif matriz[novo_y][novo_x] == Ob4:
      print("")
      leao.colisao()
      print("")
      leao.rugir()
      jacare.bramir()
      colisao += 1
    elif matriz[novo_y][novo_x] == Ob5:
      print("")
      leao.colisao()
      print("")
      leao.rugir() 
      cat.miar()
      colisao += 1
    elif matriz[novo_y][novo_x] == Ob6:
      print("")
      leao.colisao()
      print("")
      leao.rugir()
      dog.latir()
      colisao += 1
    elif matriz[novo_y][novo_x] == Ob7:
      print("")
      leao.colisao()
      print("")
      leao.rugir()
      vaca.mugir()
      colisao += 1

    #Checando colisões
    if colisao == 5:
      ganhou = True
      
    matriz[novo_y][novo_x] = Ob1
    return novo_x, novo_y

def criar_outros_objetos(matriz, num_outros_objetos,n,nu,num,num_,num_o):
    for _ in range(num_outros_objetos):
        x, y = criar_objeto(matriz)
        matriz[y][x] = Ob2
    for _ in range(n):
        x, y = criar_objeto(matriz)
        matriz[y][x] = Ob3
    for _ in range(nu):
        x, y = criar_objeto(matriz)
        matriz[y][x] = Ob4
    for _ in range(num):
        x, y = criar_objeto(matriz)
        matriz[y][x] = Ob5
    for _ in range(num_):
        x, y = criar_objeto(matriz)
        matriz[y][x] = Ob6
    for _ in range(num_o):
        x, y = criar_objeto(matriz)
        matriz[y][x] = Ob7

#Criando matriz vazia
matriz = [['_'] * tamanho_matriz for _ in range(tamanho_matriz)]

#Criando o objeto principal
objeto_x, objeto_y = criar_objeto(matriz)

#Criando os outros objetos
num_outros_objetos = 1
n = 1
nu = 1
num = 1
num_ = 1
num_o = 1

criar_outros_objetos(matriz, num_outros_objetos,n,nu,num,num_,num_o)
rodada=0
l=leao_est
#Loop principal do jogo
while True:
    print_matriz(matriz)
    rodada += 1
    l -= 1
    print(f"\nSua energia = {l}")

    #Final da energia
    if l == 0:
      print("\033[31mGAME OVER\033[m")
      break
    
    print ("\nA rodada definirá para onde você pode se mover\n\nRodada =",rodada)
    print("\nÍmpar para a esquerda ou para a direita\nPar para cima ou para baixo")
    if rodada%2==0:
       direcao = input("\nPara onde deseja mover o objeto?\n\nc - cima\nb - baixo\ns para encerrar: ").lower()
       if direcao == 's':
        break
       elif direcao == 'c':
        objeto_x, objeto_y = mover_objeto(matriz, objeto_x, objeto_y, 0, -1)
        print(" ")
       elif direcao == 'b':
        objeto_x, objeto_y = mover_objeto(matriz, objeto_x, objeto_y, 0, 1)
        print(" ")
       else:
        print("Resposta Inválida.")
    else:
      direcao = input("Para onde deseja mover o objeto?\n\ne - esquerda\nd - direita\ns para encerrar: ").lower()
      if direcao == 's':
        break
      elif direcao == 'e':
        objeto_x, objeto_y = mover_objeto(matriz, objeto_x, objeto_y, -1, 0)
        print(" ")
      elif direcao == 'd':
        objeto_x, objeto_y = mover_objeto(matriz, objeto_x, objeto_y, 1, 0)
        print(" ")
      else:
        print("Resposta Inválida.")

    #Finalização jogo
    if CO:
      break
    if ganhou:
      print("\033[32mParabéns! Você ganhou!\033[m")
      break
